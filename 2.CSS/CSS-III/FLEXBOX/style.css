.container{
    height: 400px;
    border: 3px solid green;
    display: flex;/* by default it is set main axis*/
    /* To set on cross axis */
    flex-direction: column;
    /* To set box-4 box-3 box-2 box-1 */
    /* flex-direction: column-reverse; */
    /* flex-direction: row-reverse; */
    /* To set on main axis(BY DEFAULT) */
    /* flex-direction: row; */
    /* sets whether flex items are forced onto one line or can wrap onto multiple lines (direction-downward)*/
    /* flex-wrap: wrap; */
    /* direction-upward */
    /* flex-wrap: wrap-reverse; */
    /* no wrap */
    /* flex-wrap: nowrap; */
    /* SHORT HAND NOTATION :direction + wrap */
    /* flex-flow: row nowrap; */

    /* JUSTIFY CONTENT ---> IS FOR MAIN AXIS*/
    /* justify-content:right; */
    /* justify-content: left; */
    /* justify-content: center; */
    /* SOME DISTANCE BETWEEN BOX 1,BOX 2,BOX 3,BOX 4 IS EQUAL BUT NOT DISTANCE BETWEEN BOX-1 AND BORDER AND BOX-4 AND BORDER*/
    /* justify-content: space-around; */
    /* justify-content: space-between; */
    /* ALL PLACE SAME DISTANCE EVEN BETWEEN BOX-1 AND BORDER AND LAST BOX */
    /* justify-content: space-evenly; */
    

    /* ALIGN ITEMS ---> The align-items property of flex-box aligns the items inside a flex container along the cross axis just like justify-content does along the main axis.  */
    /* align-items:flex-start; */
    /* align-items: flex-end */
    /* align-items: center; */
    /*BY DEFAULT*/
    /* align-items: stretch; */
    /* align-items: flex-start; */
    /* CONTENT IN SINGLE(TRY TO CHANGE HEADINGS SIZE LIKE H1 TAG)HORIZONTAL LINE */
    /* align-items: baseline; */

    /* HOMEWORK QUESTION: TRY TO BRING DATA IN CENTER */
    /* justify-content: center; */
    /* align-items: center; */
    /*provide gaps between the rows and columns*/
    gap: 20px;

    /* ALIGN CONTENT--->  align-content is for multi line flexible boxes. It has no effect when items are in a single line. It aligns the whole structure according to its value. */
    /* align-content: center; */
    /* align-content: flex-start; */
    /* align-content: flex-end; */
    /* align-content: space-around; */
    /* align-content: space-between; */
    /* align-content: stretch; */
    /* align-content: space-evenly; */
}   

.box{
    border: 1px solid black;
    background-color: aquamarine;
    /* width: 50px; 	 */
    /* TAKES THE REMAINING WIDTH (CAN APPLY TO INDIVIDUAL BOX) */
    /* flex-grow: 1; */
}

#box1{
    /*BY DEFAULT VALUE IS 1*/
    /* order: 1; */
    background-color: aquamarine;
}

#box2{
    /* SET THE SPEED OF SHRINKING THE BOX  */
    /* flex-shrink:2 ; */
    background-color: aquamarine;
}

#box3{
    /* width: 300px; */
    /* flex-basis: 300px; */
    /* flex basis also incereases width just like width property but when the content increases box also increases but not in the case of width property where content hide onceit exceed its width  */
    background-color: aquamarine;
}

#box4{
    /* ALIGN SELF IS USED FOR INDIVIDUAL BOX */
    /* align-self:flex-end; */
    background-color: aquamarine;
}